type UserTest{
    name:String
    firstname:String
}
type Query {
    hello(name: String): String!
    infos: UserTest!
    cvs:[cv]
    getCv(id:Int):cv
    skills:[skill]
    getSkill(id:Int):skill
    users:[user]
    getUser(id:Int):user
}
enum Role{
    USER
    ADMIN
}

type user{
    id: Int,
    name: String,
    email: String,
    role: Role,
    cvs: [cv]
}

type cv{
    id: Int!,
    name: String,
    age: Int,
    job: String,
    user: user,
    skills:[skill]
}
type skill{
    id: Int,
    designation: String,
    cvs:[cv]
}

input InputCvAdd{
    name: String!,
    age: Int!,
    job: String!,
    idUser: Int!,
    skillIds: [Int!]!
}
input InputCvUpdate{
    name: String,
    age: Int,
    job: String,
    userId: Int,
    skillIds: [Int!]
}
type Mutation {
    addCv(input: InputCvAdd!) :cv!,
    updateCv(id:Int!,input: InputCvUpdate!):cv!,
    deleteCv(id: Int!):cv!
}
type Subscription{
    cvAdded:cv!
    cvDeleted:cv!
    cvUpdated:cv!
    
}